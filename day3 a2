Array methods



To add/remove elements:

push(...items) – adds items to the end,
pop() – extracts an item from the end,
shift() – extracts an item from the beginning,
unshift(...items) – adds items to the beginning.
splice(pos, deleteCount, ...items) – at index pos delete deleteCount elements and insert items.
slice(start, end) – creates a new array, copies elements from position start till end (not inclusive) into it.
concat(...items) – returns a new array: copies all members of the current one and adds items to it. If any of items is an array, then its elements are taken.

To search among elements:

indexOf/lastIndexOf(item, pos) – look for item starting from position pos, return the index or -1 if not found.
includes(value) – returns true if the array has value, otherwise false.
find/filter(func) – filter elements through the function, return first/all values that make it return true.
findIndex is like find, but returns the index instead of a value.

To iterate over elements:

forEach(func) – calls func for every element, does not return anything.

To transform the array:

map(func) – creates a new array from results of calling func for every element.
sort(func) – sorts the array in-place, then returns it.
reverse() – reverses the array in-place, then returns it.
split/join – convert a string to array and back.
reduce(func, initial) – calculate a single value over the array by calling func for each element and passing an intermediate result between the calls.

Additionally:

Array.isArray(arr) checks arr for being an array.
Please note that methods sort, reverse and splice modify the array itself.

These methods are the most used ones, they cover 99% of use cases. But there are few others:

arr.some(fn)/arr.every(fn) checks the array.

The function fn is called on each element of the array similar to map. If any/all results are true, returns true, otherwise false.

arr.fill(value, start, end) – fills the array with repeating value from index start to end.

arr.copyWithin(target, start, end) – copies its elements from position start till position end into itself, at position target (overwrites existing).

For the full list, see the manual.

From the first sight it may seem that there are so many methods, quite difficult to remember. But actually that’s much easier.

Look through the cheat sheet just to be aware of them. Then solve the tasks of this chapter to practice, so that you have experience with array methods.


 
 
 String Methods:






charAt() - It provides the char value present at the specified index.
charCodeAt()- It provides the Unicode value of a character present at the specified index.
concat()- It provides a combination of two or more strings.
indexOf()- It provides the position of a char value present in the given string.
lastIndexOf()- It provides the position of a char value present in the given string by searching a character from the last position.
search()- It searches a specified regular expression in a given string and returns its position if a match occurs.
match()	- It searches a specified regular expression in a given string and returns that regular expression if a match occurs.
replace()- It replaces a given string with the specified replacement.
substr()- It is used to fetch the part of the given string on the basis of the specified starting position and length.
substring()- It is used to fetch the part of the given string on the basis of the specified index.
slice()- It is used to fetch the part of the given string. It allows us to assign positive as well negative index.
toLowerCase()- It converts the given string into lowercase letter.
toLocaleLowerCase()- It converts the given string into lowercase letter on the basis of host?s current locale.
toUpperCase()- It converts the given string into uppercase letter.
toLocaleUpperCase()- It converts the given string into uppercase letter on the basis of host?s current locale.
toString()- It provides a string representing the particular object.
valueOf()- It provides the primitive value of string object.
split()- It splits a string into substring array, then returns that newly created array.
trim()- It trims the white space from the left and right side of the string.

